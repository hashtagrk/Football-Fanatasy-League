/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wc;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.*;
/**
 *
 * @author Pushkar
 */

public class Fan_CreateTeam extends javax.swing.JFrame {

    /**
     * Creates new form Fan_CreateTeam
     */
    static String user;
    static int cid;
    static int mid;
    static int sid;
    public Fan_CreateTeam(String abc,int a,int b,int c) {
        user=abc;
        cid=a;
        mid=b;
        sid=c;
        initComponents();
    }
    static String goalkeeper1="select * from players where position='goalkeeper'" ;
    static String midfielder1="select * from players where position = 'midfielder'";
    static String defender1="select * from players where position = 'defender'";
    static String forward1="select * from players where position = 'attacker'";
    static String players1="select player_id,player_name,position,rating from players,Club_Player where players.player_id=Club_Player.player_id and Club_Player.cid="+cid;
    static String goalkeeper="select * from players where position='goalkeeper' and player_id not in (select player_id from temp_Player where cid="+ cid+")" ;
    static String midfielder="select * from players where position = 'midfielder' and player_id not in (select player_id from temp_Player where cid="+ cid+")";
    static String defender="select * from players where position = 'defender' and player_id not in (select player_id from temp_Player where cid="+ cid+")";
    static String forward="select * from players where position = 'attacker' and player_id not in (select player_id from temp_Player where cid="+ cid+")";
    static String players="select player_id,player_name,position,rating from players,temp_Player where players.player_id=temp_Player.player_id and temp_Player.cid="+cid;
    String url = "jdbc:oracle:thin:@workstation:1521:XE";
    String username = "raj";
    String password = "raj123";
    int a,b,c,d=0;
    int total=10000;
    Vector temp = new Vector();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        playersTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        goalkeeperTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        defenderTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        forwardTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        midfielderTable = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        playersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Player ID", "Players", "Position", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(playersTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(696, 43, 300, 318);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 153));
        jLabel1.setText("Select Goalkeeper");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(35, 43, 260, 20);

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(30, 140, 90, 30);

        goalkeeperTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Player ID", "Name", "Rating", "Cost", "Position"
            }
        ));
        jScrollPane2.setViewportView(goalkeeperTable);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(190, 30, 495, 113);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 153));
        jLabel2.setText("Select Defenders");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 200, 150, 20);

        defenderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Player ID", "Name", "Rating", "Cost", "Position"
            }
        ));
        jScrollPane3.setViewportView(defenderTable);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(199, 190, 470, 119);

        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(40, 300, 90, 30);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(100, 100, 70, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Enter Player ID");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(6, 94, 90, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Enter Player ID");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 250, 100, 30);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(110, 250, 80, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 153));
        jLabel5.setText("Select Midfielders");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 370, 150, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Enter Player ID");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 410, 90, 30);
        getContentPane().add(jTextField3);
        jTextField3.setBounds(100, 410, 80, 30);

        jButton3.setText("ADD");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(50, 460, 80, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 153));
        jLabel7.setText("Select Forwards");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 520, 140, 20);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Enter Player ID");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 560, 90, 30);
        getContentPane().add(jTextField4);
        jTextField4.setBounds(110, 560, 80, 30);

        jButton4.setText("ADD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(30, 620, 100, 30);

        forwardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Player ID", "Name", "Rating", "", "Position"
            }
        ));
        jScrollPane4.setViewportView(forwardTable);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(194, 519, 480, 112);

        midfielderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Player ID", "Name", "Rating", "Cost", "Position"
            }
        ));
        jScrollPane5.setViewportView(midfielderTable);

        getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(199, 370, 470, 117);

        jButton5.setText("Save AND Create Sqaud");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(430, 640, 210, 50);
        getContentPane().add(jTextField5);
        jTextField5.setBounds(860, 420, 80, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 153));
        jLabel9.setText("Remove player ");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(737, 388, 130, 20);

        jButton6.setText("REMOVE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(810, 460, 110, 40);

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("(1 Gk)");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(110, 70, 40, 14);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("DO NOT LEAVE THIS PAGE IN BETWEEN");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(750, 650, 230, 30);

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("MAY CAUSE DB INCONSISTENCY");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(750, 670, 170, 20);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setText("WARNING!");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(740, 640, 70, 15);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Enter Player ID");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(770, 420, 90, 30);

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("(4 Def)");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(130, 220, 34, 14);

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("(3 Mid)");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(140, 380, 33, 14);

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("(3 attk)");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(130, 530, 36, 14);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/plyr_sel.jpg"))); // NOI18N
        jLabel15.setText("jLabel15");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(0, 4, 1010, 700);

        setBounds(0, 0, 1026, 744);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        
        DefaultTableModel tb1=(DefaultTableModel)goalkeeperTable.getModel();
        String sql="select * from players where position='goalkeeper' ";
        try{
            Connection conn=DriverManager.getConnection(url,username,password);
            Statement stmt=conn.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            tb1.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb1.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        DefaultTableModel tb2=(DefaultTableModel)defenderTable.getModel();
        String sql1="select * from players where position='defender' ";
        try{
            Connection conn=DriverManager.getConnection(url,username,password);
            Statement stmt=conn.createStatement();
            ResultSet rs=stmt.executeQuery(sql1);
            tb2.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb2.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        DefaultTableModel tb3=(DefaultTableModel)midfielderTable.getModel();
        String sql2="select * from players where position='midfielder' ";
        try{
            Connection conn=DriverManager.getConnection(url,username,password);
            Statement stmt=conn.createStatement();
            ResultSet rs=stmt.executeQuery(sql2);
            tb3.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb3.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        DefaultTableModel tb4=(DefaultTableModel)forwardTable.getModel();
        String sql3="select * from players where position='attacker' ";
        try{
            Connection conn=DriverManager.getConnection(url,username,password);
            Statement stmt=conn.createStatement();
            ResultSet rs=stmt.executeQuery(sql3);
            tb4.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb4.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
        
        



    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String chosen=jTextField1.getText();
            if(a>=1)
            {
                JOptionPane.showMessageDialog(this,"No more goalkeepers can be added!");
            }
            else
            {
                try{
                    Connection conn=DriverManager.getConnection(url,username,password);
                Statement stmt4=conn.createStatement();
                int pid = Integer.parseInt(chosen);
                ResultSet rs1=stmt4.executeQuery("select cost from players where player_id="+pid);
                rs1.next();
                int cost=rs1.getInt(1);
                if(total-cost<0)
                {
                    JOptionPane.showMessageDialog(this,"Money insufficient");
                }
                else{
                total=total-cost;
                temp.add(pid);
                Statement stmt5=conn.createStatement();
                stmt5.executeQuery("insert into temp_Player values("+pid+","+cid+")");
                a++;
                rs1.close();
                }
                }
                catch(Exception e){
            System.out.println(e.getMessage());
        }
            }
            DefaultTableModel tb4=(DefaultTableModel)goalkeeperTable.getModel();
            String sql="select * from players where position='golkeeper' and player_id not in (select player_id from temp_player)";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            tb4.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb4.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
            
            DefaultTableModel tb3=(DefaultTableModel)playersTable.getModel();
            String sql1="select player_id,player_name,position,rating from temp_player natural join players";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql1);
            tb3.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[4];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                //row[4]=rs.getObject(5).toString();
                tb3.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        } 
            catch (Exception e){
            System.out.println(e.getMessage());
        }
    

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if ((a+b+c+d)<11)
        {
            if(a<1)
                JOptionPane.showMessageDialog(this,"Please add 1 goalkeeper");
            if(b<4)
                JOptionPane.showMessageDialog(this,"please add more defenders");
            if(c<3)
                JOptionPane.showMessageDialog(this,"please add more midfielders");
            if(d<3)
                JOptionPane.showMessageDialog(this,"please add more attackers");
        }
        else{
        try{
            Connection conn=DriverManager.getConnection(url,username,password);
            //Now you have vector temp ready with 11 players.
            //travese the vector and add the values to club_players.
            Iterator itr =temp.iterator();
            while(itr.hasNext())
            {
               Statement stmt=conn.createStatement();
               stmt.executeQuery("insert into Club_Player values("+cid+","+itr.next()+")");
               
            }
            Statement stmt0=conn.createStatement();
            Statement stmt1=conn.createStatement();
            Statement stmt2=conn.createStatement();
            Statement stmt3=conn.createStatement();
            Statement stmt4=conn.createStatement();
            Statement stmt5=conn.createStatement();
            Statement stmt6=conn.createStatement();
            Statement stmt7=conn.createStatement();
            Statement stmt8=conn.createStatement();
            stmt1.executeQuery("insert into User_Club values('"+user+"',"+cid+")");
            //update clubs is done using trigger.
            //stmt2.executeQuery("update clubs set flag=0 where club_id="+cid);
            stmt0.executeQuery("update user_flag set flag=1 where usr='"+user+"'");
            stmt3.executeQuery("insert into Club_Manager values("+cid+","+mid+")");
            stmt4.executeQuery("insert into Club_Stadium values("+cid+","+sid+")");
            ResultSet rs1=stmt5.executeQuery("select club_name from clubs where club_id="+cid);
            rs1.next();
            String club_name=rs1.getObject(1).toString();
            rs1.close();
            Statement stmt9=conn.createStatement();
            stmt9.executeQuery("delete from temp_Player ");
            //ResultSet rs2=stmt6.executeQuery("select manager_name from manager where manager_id="+mid);
            //String manager_name=rs2.getObject(1).toString();
            //ResultSet rs3=stmt7.executeQuery("select stadium_name from stadium where stadium_id="+sid);
            //String stadium_name=rs3.getObject(1).toString();
            stmt8.executeQuery("insert into League(club_id,club_name) values("+cid+",'"+club_name+"')");
            this.setVisible(false);
            Simulate s=new Simulate(user,cid);
            s.setVisible(true);
            
            
                
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String chosen=jTextField2.getText();
            if(b>=4)
            {
                JOptionPane.showMessageDialog(this,"No more than 4 defenders can be added!");
            }
            else
            {
                try{
                    Connection conn=DriverManager.getConnection(url,username,password);
                Statement stmt4=conn.createStatement();
                int pid = Integer.parseInt(chosen);
                ResultSet rs1=stmt4.executeQuery("select cost from players where player_id="+pid);
                rs1.next();
                int cost=rs1.getInt(1);
                if(total-cost<0)
                {
                    JOptionPane.showMessageDialog(this,"Money insufficient");
                    DefaultTableModel tb4=(DefaultTableModel)defenderTable.getModel();
            String sql="select * from players where position='defender' and player_id not in (select player_id from temp_player)";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            tb4.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb4.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
                }
                else{
                    total=total-cost;
                temp.add(pid);
                Statement stmt5=conn.createStatement();
                stmt5.executeQuery("insert into temp_Player values("+pid+","+cid+")");
                b++;
                }
                }
                catch(Exception e)
                {
                    System.out.println(e.getMessage());
                }
            }
            DefaultTableModel tb4=(DefaultTableModel)defenderTable.getModel();
            String sql="select * from players where position='defender' and player_id not in (select player_id from temp_player)";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            tb4.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb4.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
            
            DefaultTableModel tb3=(DefaultTableModel)playersTable.getModel();
            String sql1="select player_id,player_name,position,rating from temp_player natural join players";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql1);
            tb3.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[4];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                //row[4]=rs.getObject(5).toString();
                tb3.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
         

    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          String chosen=jTextField3.getText();
            if(c>=3)
            {
                JOptionPane.showMessageDialog(this,"No more than 3 midfielders can be added!");
            }
            else
            {
                try{
                    Connection conn=DriverManager.getConnection(url,username,password);
                Statement stmt4=conn.createStatement();
                int pid = Integer.parseInt(chosen);
                ResultSet rs1=stmt4.executeQuery("select cost from players where player_id="+pid);
                rs1.next();
                int cost=rs1.getInt(1);
                if(total-cost<0)
                {
                    JOptionPane.showMessageDialog(this,"Money insufficient");
                }
                else{
                    total=total-cost;
                temp.add(pid);
                Statement stmt5=conn.createStatement();
                stmt5.executeQuery("insert into temp_Player values("+pid+","+cid+")");
                c++;
                
            
            
            DefaultTableModel tb3=(DefaultTableModel)playersTable.getModel();
            String sql1="select player_id,player_name,position,rating from temp_player natural join players";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql1);
            tb3.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[4];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                //row[4]=rs.getObject(5).toString();
                tb3.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
         }//stmt4.executeQuery("insert into Club_Player values("+cid+","+pid+")");
                DefaultTableModel tb4=(DefaultTableModel)midfielderTable.getModel();
            String sql="select * from players where position='midfielder' and player_id not in (select player_id from temp_player)";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            tb4.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb4.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
            }
                
            
            catch (Exception e){
            System.out.println(e.getMessage());
        }
    }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String chosen=jTextField4.getText();
            if(d>=3)
            {
                JOptionPane.showMessageDialog(this,"No more than 3 attackers can be added!");
            }
            else
            {
                try{
                    Connection conn=DriverManager.getConnection(url,username,password);
                Statement stmt4=conn.createStatement();
                int pid = Integer.parseInt(chosen);
                ResultSet rs1=stmt4.executeQuery("select cost from players where player_id="+pid);
                rs1.next();
                int cost=rs1.getInt(1);
                if(total-cost<0)
                {
                    JOptionPane.showMessageDialog(this,"Money insufficient");
                }
                else{
                    total=total-cost;
                temp.add(pid);
                Statement stmt5=conn.createStatement();
                stmt5.executeQuery("insert into temp_Player values("+pid+","+cid+")");
                d++;
                
            DefaultTableModel tb4=(DefaultTableModel)forwardTable.getModel();
            String sql="select * from players where position='attacker' and player_id not in (select player_id from temp_player)";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql);
            tb4.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[5];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                row[4]=rs.getObject(5).toString();
                tb4.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
            
            DefaultTableModel tb3=(DefaultTableModel)playersTable.getModel();
            String sql1="select player_id,player_name,position,rating from temp_player natural join players";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql1);
            tb3.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[4];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                //row[4]=rs.getObject(5).toString();
                tb3.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
         }//stmt4.executeQuery("insert into Club_Player values("+cid+","+pid+")");
            }
                
            
            catch (Exception e){
            System.out.println(e.getMessage());
        }
    }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String chosen=jTextField5.getText();
        try{
        Connection conn=DriverManager.getConnection(url,username,password);
            Statement stmt4=conn.createStatement();
            Statement stmt5=conn.createStatement();
                int pid = Integer.parseInt(chosen);
                ResultSet rs1=stmt4.executeQuery("select cost from players where player_id="+pid);
                rs1.next();
                int cost=rs1.getInt(1);
                ResultSet rs2=stmt5.executeQuery("select position from players where player_id="+pid);
                rs2.next();
                String pos=rs2.getObject(1).toString();
        //pid of that player in int pid;
        //get position in String pos;
        //get int cost;
        if(pos.equals("goalkeeper"))
        {
            total=total+cost;
            a--;
            temp.remove((Integer)pid); 
            Statement stmt=conn.createStatement();
            stmt.executeQuery("delete from temp_Player where player_id="+pid+" and cid="+cid);
        }
        else if(pos.equals("defender"))
        {
            total=total+cost;
            b--;
            temp.remove((Integer)pid); 
            Statement stmt=conn.createStatement();
            stmt.executeQuery("delete from temp_Player where player_id="+pid+" and cid="+cid);
        }
        else if(pos.equals("midfielder"))
        {
            total=total+cost;
            c--;
            temp.remove((Integer)pid); 
            Statement stmt=conn.createStatement();
            stmt.executeQuery("delete from temp_Player where player_id="+pid+" and cid="+cid);
        }
        else
        {
            total=total+cost;
            d--;
            temp.remove((Integer)pid);
            Statement stmt=conn.createStatement();
            stmt.executeQuery("delete from temp_Player where player_id="+pid+" and cid="+cid);
        }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
         
        DefaultTableModel tb3=(DefaultTableModel)playersTable.getModel();
            String sql1="select player_id,player_name,position,rating from temp_player natural join players";
            try{
            Connection conn1=DriverManager.getConnection(url,username,password);
            Statement stmt=conn1.createStatement();
            ResultSet rs=stmt.executeQuery(sql1);
            tb3.setRowCount(0);
            while(rs.next()){
                Object row[]=new Object[4];
                row[0]=rs.getObject(1).toString();
                row[1]=rs.getObject(2).toString();
                row[2]=rs.getObject(3).toString();
                row[3]=rs.getObject(4).toString();
                //row[4]=rs.getObject(5).toString();
                tb3.addRow(row);
                //System.out.println("LL");
            }
            rs.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fan_CreateTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fan_CreateTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fan_CreateTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fan_CreateTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fan_CreateTeam(user,cid,mid,sid).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable defenderTable;
    private javax.swing.JTable forwardTable;
    private javax.swing.JTable goalkeeperTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable midfielderTable;
    private javax.swing.JTable playersTable;
    // End of variables declaration//GEN-END:variables
}
